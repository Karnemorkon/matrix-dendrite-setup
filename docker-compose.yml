version: '3.9'

services:
  # =====================
  # Matrix Dendrite сервер
  # =====================
  dendrite:
    image: matrixdotorg/dendrite-monolith:latest
    container_name: dendrite
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./config/dendrite:/etc/matrix/dendrite
      - ./backup/database:/var/lib/matrix/dendrite
    depends_on:
      - postgres
      - redis
    ports:
      - "${DENDRITE_PORT:-8008}:8008"
    networks:
      - matrix

  # =====================
  # PostgreSQL база даних
  # =====================
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./backup/database:/var/lib/postgresql/data
    networks:
      - matrix

  # =====================
  # Redis кеш
  # =====================
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - matrix
    volumes:
      - ./backup/redis:/data

  # =====================
  # Міст Signal (опціонально)
  # =====================
  signal-bridge:
    image: dock.mau.dev/mautrix/signal:latest
    container_name: signal-bridge
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./config/bridges/signal:/data
    depends_on:
      - dendrite
    networks:
      - matrix
    ports:
      - "${SIGNAL_BRIDGE_PORT:-29328}:29328"
    environment:
      - ENABLED=${SIGNAL_BRIDGE_ENABLED}
    # Скрипт інсталятора вмикає/вимикає міст через .env

  # =====================
  # Міст WhatsApp (опціонально)
  # =====================
  whatsapp-bridge:
    image: dock.mau.dev/mautrix/whatsapp:latest
    container_name: whatsapp-bridge
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./config/bridges/whatsapp:/data
    depends_on:
      - dendrite
    networks:
      - matrix
    ports:
      - "${WHATSAPP_BRIDGE_PORT:-29329}:29329"
    environment:
      - ENABLED=${WHATSAPP_BRIDGE_ENABLED}

  # =====================
  # Міст Discord (опціонально)
  # =====================
  discord-bridge:
    image: dock.mau.dev/mautrix/discord:latest
    container_name: discord-bridge
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./config/bridges/discord:/data
    depends_on:
      - dendrite
    networks:
      - matrix
    ports:
      - "${DISCORD_BRIDGE_PORT:-29330}:29330"
    environment:
      - ENABLED=${DISCORD_BRIDGE_ENABLED}

  # =====================
  # Nginx (reverse proxy)
  # =====================
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
    depends_on:
      - dendrite
      - element-web
      - admin-panel
    ports:
      - "80:80"
      - "443:443"
    networks:
      - matrix

  # =====================
  # Cloudflare Tunnel (опціонально)
  # =====================
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      - nginx
    networks:
      - matrix
    # Вмикається/вимикається через .env

  # =====================
  # Grafana (метрики)
  # =====================
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./config/grafana:/etc/grafana/provisioning
      - ./backup/grafana:/var/lib/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    networks:
      - matrix

  # =====================
  # Prometheus (збір метрик)
  # =====================
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./config/prometheus:/etc/prometheus
      - ./backup/prometheus:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - matrix

  # =====================
  # Admin Panel (заглушка)
  # =====================
  admin-panel:
    # Готовий образ з Docker Hub (рекомендовано)
    image: morkon06/matrix-dendrite-setup-admin-panel:latest
    # Або локальна збірка:
    # build: ./dashboard/admin-panel
    container_name: admin-panel
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./scripts:/scripts:ro
      - ./backup:/backup
    ports:
      - "${ADMIN_PANEL_PORT:-8080}:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - dendrite
      - postgres
    networks:
      - matrix

  # =====================
  # Element Web (Matrix web client)
  # =====================
  element-web:
    image: vectorim/element-web:latest
    container_name: element-web
    restart: unless-stopped
    volumes:
      - ./dashboard/web-client:/app/config:ro
    ports:
      - "${ELEMENT_PORT:-80}:80"
    networks:
      - matrix

  # =====================
  # Matrix Bot (керування через команди)
  # =====================
  matrix-bot:
    # Готовий образ з Docker Hub (рекомендовано)
    image: morkon06/matrix-dendrite-setup-matrix-bot:latest
    # Або локальна збірка:
    # build: ./config/bot
    container_name: matrix-bot
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MATRIX_HOMESERVER_URL=http://dendrite:8008
      - MATRIX_BOT_USERNAME=${MATRIX_BOT_USERNAME}
      - MATRIX_BOT_PASSWORD=${MATRIX_BOT_PASSWORD}
      - MATRIX_BOT_ROOM_ID=${MATRIX_BOT_ROOM_ID}
      - ADMIN_PANEL_URL=http://admin-panel:3000
    depends_on:
      - dendrite
      - admin-panel
    networks:
      - matrix

  # =====================
  # Backup Service (бекапи)
  # =====================
  backup:
    image: alpine:latest
    container_name: backup
    restart: unless-stopped
    volumes:
      - ./backup:/backup
      - ./scripts:/scripts:ro
    entrypoint: ["/bin/sh", "/scripts/backup.sh"]
    networks:
      - matrix
    # Скрипт backup.sh виконує резервне копіювання

networks:
  matrix:
    driver: bridge
