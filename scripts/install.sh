#!/bin/bash

# Matrix Dendrite Setup - –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π —ñ–Ω—Å—Ç–∞–ª—è—Ç–æ—Ä
# –ê–≤—Ç–æ—Ä: Matrix Setup Team
# –í–µ—Ä—Å—ñ—è: 1.0.0

set -e

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—ó –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥
check_system_requirements() {
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –û–°
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        error "–¶–µ–π —Å–∫—Ä–∏–ø—Ç –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –Ω–∞ Linux"
        exit 1
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤ root
    if [[ $EUID -eq 0 ]]; then
        warn "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–∏–π –∑ –ø—Ä–∞–≤–∞–º–∏ root"
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—ó –ø–∞–º'—è—Ç—ñ
    local mem_total=$(free -m | awk 'NR==2{printf "%.0f", $2/1024}')
    if [[ $mem_total -lt 2 ]]; then
        error "–ü–æ—Ç—Ä—ñ–±–Ω–æ –º—ñ–Ω—ñ–º—É–º 2GB RAM. –î–æ—Å—Ç—É–ø–Ω–æ: ${mem_total}GB"
        exit 1
    fi
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–ª—å–Ω–æ–≥–æ –º—ñ—Å—Ü—è
    local disk_free=$(df -BG . | awk 'NR==2{print $4}' | sed 's/G//')
    if [[ $disk_free -lt 10 ]]; then
        error "–ü–æ—Ç—Ä—ñ–±–Ω–æ –º—ñ–Ω—ñ–º—É–º 10GB –≤—ñ–ª—å–Ω–æ–≥–æ –º—ñ—Å—Ü—è. –î–æ—Å—Ç—É–ø–Ω–æ: ${disk_free}GB"
        exit 1
    fi
    
    log "–°–∏—Å—Ç–µ–º–Ω—ñ –≤–∏–º–æ–≥–∏ –≤–∏–∫–æ–Ω–∞–Ω—ñ ‚úì"
}

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—É
detect_distribution() {
    if [[ -f /etc/os-release ]]; then
        . /etc/os-release
        DISTRO=$ID
        VERSION=$VERSION_ID
    elif [[ -f /etc/debian_version ]]; then
        DISTRO="debian"
        VERSION=$(cat /etc/debian_version)
    elif [[ -f /etc/lsb-release ]]; then
        . /etc/lsb-release
        DISTRO=$(echo $DISTRIB_ID | tr '[:upper:]' '[:lower:]')
        VERSION=$DISTRIB_RELEASE
    else
        error "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤"
        exit 1
    fi
    
    log "–í–∏—è–≤–ª–µ–Ω–æ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $DISTRO $VERSION"
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker
install_docker() {
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker..."
    
    if command -v docker &> /dev/null; then
        log "Docker –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π"
        return 0
    fi
    
    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—É
    detect_distribution
    
    log "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker –¥–ª—è $DISTRO..."
    
    # –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó–≤ Docker, —è–∫—â–æ –≤–æ–Ω–∏ —ñ—Å–Ω—É—é—Ç—å
    if [[ -f /etc/apt/sources.list.d/docker.list ]]; then
        log "–í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é Docker..."
        sudo rm -f /etc/apt/sources.list.d/docker.list
    fi
    
    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–∫–µ—Ç—ñ–≤
    sudo apt-get update
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    sudo apt-get install -y \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        lsb-release
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—É
    case $DISTRO in
        "ubuntu")
            log "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker –¥–ª—è Ubuntu..."
            # –î–æ–¥–∞–≤–∞–Ω–Ω—è GPG –∫–ª—é—á–∞ Docker
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            
            # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é Docker –¥–ª—è Ubuntu
            echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
            # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            ;;
        "debian")
            log "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker –¥–ª—è Debian..."
            # –î–æ–¥–∞–≤–∞–Ω–Ω—è GPG –∫–ª—é—á–∞ Docker
            curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            
            # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é Docker –¥–ª—è Debian
            echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
            # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            ;;
        *)
            log "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–∞–∫–µ—Ç—É Docker –¥–ª—è $DISTRO..."
            sudo apt-get install -y docker.io
            ;;
    esac
    
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –≥—Ä—É–ø–∏ docker
    sudo usermod -aG docker $USER
    
    # –ó–∞–ø—É—Å–∫ —Ç–∞ –≤–º–∏–∫–∞–Ω–Ω—è Docker —Å–µ—Ä–≤—ñ—Å—É
    sudo systemctl start docker
    sudo systemctl enable docker
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É
    if ! docker info &> /dev/null; then
        warn "Docker –ø–æ—Ç—Ä–µ–±—É—î –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–µ—Å—ñ—ó –∞–±–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É —Å–∏—Å—Ç–µ–º–∏"
        warn "–ê–±–æ –∑–∞–ø—É—Å—Ç—ñ—Ç—å: newgrp docker"
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤
        fix_docker_permissions
    fi
    
    log "Docker –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ ‚úì"
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose
install_docker_compose() {
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose..."
    
    if command -v docker-compose &> /dev/null; then
        log "Docker Compose –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π"
        return 0
    fi
    
    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—É
    detect_distribution
    
    log "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose –¥–ª—è $DISTRO..."
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—É
    case $DISTRO in
        "ubuntu"|"debian")
            # –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —á–µ—Ä–µ–∑ apt
            if sudo apt-get install -y docker-compose-plugin; then
                log "Docker Compose –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ apt"
                # –°—Ç–≤–æ—Ä–∏—Ç–∏ —Å–∏–º–≤–æ–ª—ñ—á–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ
                sudo ln -sf /usr/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose
            else
                log "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose –∑ GitHub..."
                # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Docker Compose
                sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                
                # –ù–∞–¥–∞–Ω–Ω—è –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
                sudo chmod +x /usr/local/bin/docker-compose
            fi
            ;;
        *)
            log "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose –∑ GitHub..."
            # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Docker Compose
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            
            # –ù–∞–¥–∞–Ω–Ω—è –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
            sudo chmod +x /usr/local/bin/docker-compose
            ;;
    esac
    
    log "Docker Compose –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ ‚úì"
}

# –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É Docker
fix_docker_permissions() {
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É Docker..."
    
    if ! docker info &> /dev/null; then
        warn "–ü—Ä–æ–±–ª–µ–º–∞ –∑ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø—É Docker"
        
        # –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø—Ä–∞–≤–∞
        sudo chmod 666 /var/run/docker.sock 2>/dev/null || true
        
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ Docker —Å–µ—Ä–≤—ñ—Å
        sudo systemctl restart docker
        
        # –û–Ω–æ–≤–∏—Ç–∏ –≥—Ä—É–ø–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        newgrp docker <<< "echo '–ì—Ä—É–ø–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ'" || true
        
        if docker info &> /dev/null; then
            log "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úì"
        else
            warn "–ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å–µ—Å—ñ—é –∞–±–æ —Å–∏—Å—Ç–µ–º—É"
            warn "–ó–∞–ø—É—Å—Ç—ñ—Ç—å: newgrp docker"
        fi
    else
        log "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É Docker –≤ –ø–æ—Ä—è–¥–∫—É ‚úì"
    fi
}

# –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è .env —Ñ–∞–π–ª—É
setup_env_interactive() {
    clear
    echo "=========================================="
    echo "    üåê –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Matrix —Å–µ—Ä–≤–µ—Ä–∞"
    echo "=========================================="
    echo ""
    echo "–¶–µ–π –∫—Ä–æ–∫ –Ω–∞–ª–∞—à—Ç—É—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ Matrix —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "‚Ä¢ –î–æ–º–µ–Ω —Ç–∞ –º–µ—Ä–µ–∂–µ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    echo "‚Ä¢ –ü–∞—Ä–æ–ª—ñ –¥–ª—è —Å–µ—Ä–≤—ñ—Å—ñ–≤"
    echo "‚Ä¢ –ú–æ—Å—Ç–∏ –¥–ª—è –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –º–µ—Å–µ–Ω–¥–∂–µ—Ä—ñ–≤"
    echo "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –±–µ–∫–∞–ø–∏"
    echo "‚Ä¢ –°–∏—Å—Ç–µ–º–Ω–∏–π –±–æ—Ç"
    echo ""
    echo "üí° –ü–æ—Ä–∞–¥–∏:"
    echo "‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –Ω–∞–¥—ñ–π–Ω—ñ –ø–∞—Ä–æ–ª—ñ"
    echo "‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—ñ –≤ –±–µ–∑–ø–µ—á–Ω–æ–º—É –º—ñ—Å—Ü—ñ"
    echo "‚Ä¢ –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ localhost"
    echo ""
    log "–ü–æ—á–∞—Ç–æ–∫ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É –∑ –ø—Ä–∏–∫–ª–∞–¥—É
    if [[ ! -f .env ]]; then
        cp env.example .env
        log "–°—Ç–≤–æ—Ä–µ–Ω–æ .env —Ñ–∞–π–ª –∑ –ø—Ä–∏–∫–ª–∞–¥—É"
    fi
    
    # –ó–∞–ø–∏—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–æ–º–µ–Ω—É
    read -p "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: matrix.example.com): " domain
    if [[ -z "$domain" ]]; then
        error "–î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º"
        exit 1
    fi
    sed -i "s/your-domain.com/$domain/g" .env
    
    # –ó–∞–ø–∏—Ç –ø–∞—Ä–æ–ª—ñ–≤
    read -s -p "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö PostgreSQL: " db_password
    echo
    if [[ -z "$db_password" ]]; then
        db_password=$(openssl rand -base64 32)
        log "–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"
    fi
    sed -i "s/your-db-password-here/$db_password/" .env
    
    read -s -p "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è Redis (Enter –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó): " redis_password
    echo
    if [[ -z "$redis_password" ]]; then
        redis_password=$(openssl rand -base64 32)
        log "–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è Redis"
    fi
    sed -i "s/your-redis-password-here/$redis_password/" .env
    
    read -s -p "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è Grafana (Enter –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó): " grafana_password
    echo
    if [[ -z "$grafana_password" ]]; then
        grafana_password=$(openssl rand -base64 32)
        log "–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è Grafana"
    fi
    sed -i "s/your-grafana-password-here/$grafana_password/" .env
    
    read -s -p "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è Matrix –±–æ—Ç–∞ (Enter –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó): " bot_password
    echo
    if [[ -z "$bot_password" ]]; then
        bot_password=$(openssl rand -base64 32)
        log "–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –¥–ª—è –±–æ—Ç–∞"
    fi
    sed -i "s/your-bot-password-here/$bot_password/" .env
    
    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Å–µ–∫—Ä–µ—Ç–Ω–∏—Ö –∫–ª—é—á—ñ–≤
    local registration_secret=$(openssl rand -hex 32)
    local jwt_secret=$(openssl rand -hex 32)
    local encryption_key=$(openssl rand -hex 32)
    local backup_key=$(openssl rand -hex 32)
    local admin_secret=$(openssl rand -hex 32)
    
    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É –∑ —Å–µ–∫—Ä–µ—Ç–∞–º–∏
    sed -i "s/your-secret-key-here/$registration_secret/" .env
    sed -i "s/your-jwt-secret-here/$jwt_secret/" .env
    sed -i "s/your-encryption-key-here/$encryption_key/" .env
    sed -i "s/your-backup-encryption-key-here/$backup_key/" .env
    sed -i "s/your-admin-secret-key-here/$admin_secret/" .env
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Cloudflare Tunnel
    read -p "–ß–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –≤–∏ Cloudflare Tunnel? (y/n): " use_tunnel
    if [[ $use_tunnel == "y" || $use_tunnel == "Y" ]]; then
        read -p "–í–≤–µ–¥—ñ—Ç—å —Ç–æ–∫–µ–Ω Cloudflare Tunnel: " tunnel_token
        if [[ -n "$tunnel_token" ]]; then
            sed -i "s/your-tunnel-token-here/$tunnel_token/" .env
            log "Cloudflare Tunnel –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π"
        else
            sed -i "s/CLOUDFLARE_TUNNEL_ENABLED=true/CLOUDFLARE_TUNNEL_ENABLED=false/" .env
            log "Cloudflare Tunnel –≤—ñ–¥–∫–ª—é—á–µ–Ω–∏–π"
        fi
    else
        sed -i "s/CLOUDFLARE_TUNNEL_ENABLED=true/CLOUDFLARE_TUNNEL_ENABLED=false/" .env
        log "Cloudflare Tunnel –≤—ñ–¥–∫–ª—é—á–µ–Ω–∏–π"
    fi
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ—Å—Ç—ñ–≤
    echo ""
    echo "üåâ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ—Å—Ç—ñ–≤ –¥–ª—è –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –º–µ—Å–µ–Ω–¥–∂–µ—Ä—ñ–≤:"
    echo "–ú–æ—Å—Ç–∏ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è —á–µ—Ä–µ–∑ Matrix –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ —ñ–Ω—à–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º."
    echo ""
    
    # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≤–∏–±—ñ—Ä –º–æ—Å—Ç—ñ–≤
    echo "üì± –î–æ—Å—Ç—É–ø–Ω—ñ –º–æ—Å—Ç–∏:"
    echo "1) üìû Signal –º—ñ—Å—Ç - –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ Signal"
    echo "   ‚Ä¢ –ü–æ—Ç—Ä–µ–±—É—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    echo "   ‚Ä¢ –ü–æ—Ä—Ç: 29328"
    echo ""
    echo "2) üí¨ WhatsApp –º—ñ—Å—Ç - –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ WhatsApp"
    echo "   ‚Ä¢ –ü–æ—Ç—Ä–µ–±—É—î QR-–∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó"
    echo "   ‚Ä¢ –ü–æ—Ä—Ç: 29329"
    echo ""
    echo "3) üéÆ Discord –º—ñ—Å—Ç - –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ Discord"
    echo "   ‚Ä¢ –ü–æ—Ç—Ä–µ–±—É—î —Ç–æ–∫–µ–Ω Discord –±–æ—Ç–∞"
    echo "   ‚Ä¢ –ü–æ—Ä—Ç: 29330"
    echo ""
    
    # –í–∏–±—ñ—Ä —Ä–µ–∂–∏–º—É
    echo "üîß –†–µ–∂–∏–º–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è:"
    echo "4) ‚úÖ –í—Å—ñ –º–æ—Å—Ç–∏ - –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –º–æ—Å—Ç–∏"
    echo "5) ‚ùå –ë–µ–∑ –º–æ—Å—Ç—ñ–≤ - –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∂–æ–¥–Ω–æ–≥–æ –º–æ—Å—Ç–∞"
    echo "6) üéØ –í–∏–±—Ä–∞—Ç–∏ –æ–∫—Ä–µ–º–æ - –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∫–æ–∂–µ–Ω –º—ñ—Å—Ç —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ"
    echo ""
    
    read -p "–í–∏–±–µ—Ä—ñ—Ç—å —Ä–µ–∂–∏–º (1-6): " bridge_mode
    
    case $bridge_mode in
        1)
            # –¢—ñ–ª—å–∫–∏ Signal
            sed -i "s/SIGNAL_BRIDGE_ENABLED=false/SIGNAL_BRIDGE_ENABLED=true/" .env
            sed -i "s/WHATSAPP_BRIDGE_ENABLED=true/WHATSAPP_BRIDGE_ENABLED=false/" .env
            sed -i "s/DISCORD_BRIDGE_ENABLED=true/DISCORD_BRIDGE_ENABLED=false/" .env
            log "‚úÖ –í–∏–±—Ä–∞–Ω–æ Signal –º—ñ—Å—Ç"
            ;;
        2)
            # –¢—ñ–ª—å–∫–∏ WhatsApp
            sed -i "s/SIGNAL_BRIDGE_ENABLED=true/SIGNAL_BRIDGE_ENABLED=false/" .env
            sed -i "s/WHATSAPP_BRIDGE_ENABLED=false/WHATSAPP_BRIDGE_ENABLED=true/" .env
            sed -i "s/DISCORD_BRIDGE_ENABLED=true/DISCORD_BRIDGE_ENABLED=false/" .env
            log "‚úÖ –í–∏–±—Ä–∞–Ω–æ WhatsApp –º—ñ—Å—Ç"
            ;;
        3)
            # –¢—ñ–ª—å–∫–∏ Discord
            sed -i "s/SIGNAL_BRIDGE_ENABLED=true/SIGNAL_BRIDGE_ENABLED=false/" .env
            sed -i "s/WHATSAPP_BRIDGE_ENABLED=true/WHATSAPP_BRIDGE_ENABLED=false/" .env
            sed -i "s/DISCORD_BRIDGE_ENABLED=false/DISCORD_BRIDGE_ENABLED=true/" .env
            log "‚úÖ –í–∏–±—Ä–∞–Ω–æ Discord –º—ñ—Å—Ç"
            ;;
        4)
            # –í—Å—ñ –º–æ—Å—Ç–∏
            log "‚úÖ –í–∏–±—Ä–∞–Ω–æ –≤—Å—ñ –º–æ—Å—Ç–∏"
            ;;
        5)
            # –ë–µ–∑ –º–æ—Å—Ç—ñ–≤
            sed -i "s/SIGNAL_BRIDGE_ENABLED=true/SIGNAL_BRIDGE_ENABLED=false/" .env
            sed -i "s/WHATSAPP_BRIDGE_ENABLED=true/WHATSAPP_BRIDGE_ENABLED=false/" .env
            sed -i "s/DISCORD_BRIDGE_ENABLED=true/DISCORD_BRIDGE_ENABLED=false/" .env
            log "‚ùå –ú–æ—Å—Ç–∏ –≤—ñ–¥–∫–ª—é—á–µ–Ω—ñ"
            ;;
        6)
            # –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä
            echo ""
            echo "üéØ –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –º–æ—Å—Ç—ñ–≤:"
            
            read -p "–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Signal –º—ñ—Å—Ç? (y/n): " signal_choice
            if [[ $signal_choice == "y" || $signal_choice == "Y" ]]; then
                sed -i "s/SIGNAL_BRIDGE_ENABLED=false/SIGNAL_BRIDGE_ENABLED=true/" .env
                echo "‚úÖ Signal –º—ñ—Å—Ç –≤–∫–ª—é—á–µ–Ω–∏–π"
            else
                sed -i "s/SIGNAL_BRIDGE_ENABLED=true/SIGNAL_BRIDGE_ENABLED=false/" .env
                echo "‚ùå Signal –º—ñ—Å—Ç –≤—ñ–¥–∫–ª—é—á–µ–Ω–∏–π"
            fi
            
            read -p "–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ WhatsApp –º—ñ—Å—Ç? (y/n): " whatsapp_choice
            if [[ $whatsapp_choice == "y" || $whatsapp_choice == "Y" ]]; then
                sed -i "s/WHATSAPP_BRIDGE_ENABLED=false/WHATSAPP_BRIDGE_ENABLED=true/" .env
                echo "‚úÖ WhatsApp –º—ñ—Å—Ç –≤–∫–ª—é—á–µ–Ω–∏–π"
            else
                sed -i "s/WHATSAPP_BRIDGE_ENABLED=true/WHATSAPP_BRIDGE_ENABLED=false/" .env
                echo "‚ùå WhatsApp –º—ñ—Å—Ç –≤—ñ–¥–∫–ª—é—á–µ–Ω–∏–π"
            fi
            
            read -p "–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Discord –º—ñ—Å—Ç? (y/n): " discord_choice
            if [[ $discord_choice == "y" || $discord_choice == "Y" ]]; then
                sed -i "s/DISCORD_BRIDGE_ENABLED=false/DISCORD_BRIDGE_ENABLED=true/" .env
                echo "‚úÖ Discord –º—ñ—Å—Ç –≤–∫–ª—é—á–µ–Ω–∏–π"
            else
                sed -i "s/DISCORD_BRIDGE_ENABLED=true/DISCORD_BRIDGE_ENABLED=false/" .env
                echo "‚ùå Discord –º—ñ—Å—Ç –≤—ñ–¥–∫–ª—é—á–µ–Ω–∏–π"
            fi
            
            log "üéØ –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –º–æ—Å—Ç—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
            ;;
        *)
            error "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º (–≤—Å—ñ –º–æ—Å—Ç–∏)"
            ;;
    esac
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∫–∞–ø—ñ–≤
    echo ""
    echo "üíæ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—Ö –±–µ–∫–∞–ø—ñ–≤:"
    echo "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –±–µ–∫–∞–ø–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó, –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —Ñ–∞–π–ª–∏."
    echo "–†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –¥–∞–Ω–∏—Ö —É –≤–∏–ø–∞–¥–∫—É –∑–±–æ—é —Å–∏—Å—Ç–µ–º–∏."
    echo ""
    
    read -p "–ß–∏ –≤–º–∏–∫–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –±–µ–∫–∞–ø–∏? (y/n): " enable_backup
    if [[ $enable_backup == "n" || $enable_backup == "N" ]]; then
        sed -i "s/BACKUP_ENABLED=true/BACKUP_ENABLED=false/" .env
        log "‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –±–µ–∫–∞–ø–∏ –≤—ñ–¥–∫–ª—é—á–µ–Ω—ñ"
    else
        echo ""
        echo "üìÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä—ñ–æ–¥—É –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è:"
        echo "‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä—ñ–æ–¥ (1-7 –¥–Ω—ñ–≤) - –µ–∫–æ–Ω–æ–º–∏—Ç—å –º—ñ—Å—Ü–µ"
        echo "‚Ä¢ –°–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä—ñ–æ–¥ (7-30 –¥–Ω—ñ–≤) - –±–∞–ª–∞–Ω—Å –º—ñ–∂ –±–µ–∑–ø–µ–∫–æ—é —Ç–∞ –º—ñ—Å—Ü–µ–º"
        echo "‚Ä¢ –î–æ–≤–≥–∏–π –ø–µ—Ä—ñ–æ–¥ (30+ –¥–Ω—ñ–≤) - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –±–µ–∑–ø–µ–∫–∞"
        echo ""
        read -p "–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –±–µ–∫–∞–ø—ñ–≤ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 30): " backup_days
        if [[ -n "$backup_days" ]]; then
            sed -i "s/BACKUP_RETENTION_DAYS=30/BACKUP_RETENTION_DAYS=$backup_days/" .env
            log "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –±–µ–∫–∞–ø–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ –Ω–∞ $backup_days –¥–Ω—ñ–≤"
        else
            log "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –±–µ–∫–∞–ø–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ –Ω–∞ 30 –¥–Ω—ñ–≤ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)"
        fi
    fi
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Matrix –±–æ—Ç–∞
    echo ""
    echo "ü§ñ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Matrix –±–æ—Ç–∞:"
    echo "Matrix –±–æ—Ç –º–æ–∂–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ —Å—Ç–∞–Ω —Å–µ—Ä–≤—ñ—Å—ñ–≤, –ø–æ–º–∏–ª–∫–∏ —Ç–∞ –≤–∞–∂–ª–∏–≤—ñ –ø–æ–¥—ñ—ó."
    echo "–ö–æ—Ä–∏—Å–Ω–æ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞."
    echo ""
    
    read -p "–ß–∏ –≤–º–∏–∫–∞—Ç–∏ Matrix –±–æ—Ç–∞ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å? (y/n): " enable_bot
    if [[ $enable_bot == "n" || $enable_bot == "N" ]]; then
        sed -i "s/MATRIX_BOT_ENABLED=true/MATRIX_BOT_ENABLED=false/" .env
        log "‚ùå Matrix –±–æ—Ç –≤—ñ–¥–∫–ª—é—á–µ–Ω–∏–π"
    else
        echo ""
        echo "üë§ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞:"
        echo "‚Ä¢ –ë–æ—Ç –±—É–¥–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —è–∫ –æ–∫—Ä–µ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ"
        echo "‚Ä¢ –í—ñ–Ω –º–æ–∂–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫—ñ–º–Ω–∞—Ç–∏ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å"
        echo "‚Ä¢ –ö–æ—Ä–∏—Å–Ω–∏–π –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Å—Ç–∞–Ω—É —Å–µ—Ä–≤—ñ—Å—ñ–≤"
        echo ""
        read -p "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –±–æ—Ç–∞ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º system-bot): " bot_username
        if [[ -n "$bot_username" ]]; then
            sed -i "s/MATRIX_BOT_USERNAME=system-bot/MATRIX_BOT_USERNAME=$bot_username/" .env
            log "‚úÖ Matrix –±–æ—Ç –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π –∑ —ñ–º'—è–º: $bot_username"
        else
            log "‚úÖ Matrix –±–æ—Ç –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π –∑ —ñ–º'—è–º: system-bot"
        fi
    fi
    
    log "–í—Å—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ ‚úì"
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
create_configs() {
    log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤..."
    
    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    if [[ -f ".env" ]]; then
        source .env
    else
        error "–§–∞–π–ª .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä—ñ—Ç—å –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é."
        return 1
    fi
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π –¥–ª—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
    mkdir -p config/{dendrite,bridges,nginx,grafana,prometheus}
    mkdir -p backup/{database,configs,uploads}
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó Dendrite
    cat > config/dendrite/dendrite.yaml << EOF
# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Matrix Dendrite —Å–µ—Ä–≤–µ—Ä–∞
version: 2

global:
  server_name: ${DOMAIN:-localhost}
  private_key: /etc/matrix/dendrite/signing.key
  trusted_third_party_id_servers:
    - matrix.org
    - vector.im
  disable_federation: false
  presence:
    enable_inbound: false
    enable_outbound: false
  report_stats:
    enabled: false
  server_notices:
    enabled: false
  metrics:
    enabled: false
  dns_cache:
    enabled: false
  database:
    connection_string: postgresql://${POSTGRES_USER:-dendrite}:${POSTGRES_PASSWORD}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-dendrite}?sslmode=disable
    max_open_conns: 90
    max_idle_conns: 5
    conn_max_lifetime: -1
  cache:
    max_size_estimated: 1gb
    max_age: 1h

client_api:
  registration_disabled: false
  registration_shared_secret: ${REGISTRATION_SHARED_SECRET}
  guests_disabled: true
  enable_registration_captcha: false
  rate_limiting:
    enabled: true
    threshold: 20
    cooloff_ms: 500

federation_api:
  send_max_retries: 16
  disable_tls_validation: false
  disable_http_keepalives: false
  prefer_direct_fetch: false

media_api:
  base_path: /var/lib/matrix/media
  max_file_size_bytes: 10485760
  dynamic_thumbnails: false
  max_thumbnail_generators: 10
  thumbnail_sizes:
    - width: 32
      height: 32
      method: crop
    - width: 96
      height: 96
      method: crop
    - width: 640
      height: 480
      method: scale

sync_api:
  search:
    enabled: false
    index_path: "./searchindex"
    language: "en"

user_api:
  bcrypt_cost: 10
  auto_join_rooms: []

mscs:
  mscs: []

logging:
  - type: std
    level: info
EOF

    log "–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω—ñ —Ñ–∞–π–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ ‚úì"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤
start_services() {
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ .env —Ñ–∞–π–ª—É
    if [[ ! -f ".env" ]]; then
        error "–§–∞–π–ª .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä—ñ—Ç—å –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é."
        return 1
    fi
    
    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    source .env
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤ —á–µ—Ä–µ–∑ Docker Compose
    docker-compose up -d
    
    log "–°–µ—Ä–≤—ñ—Å–∏ –∑–∞–ø—É—â–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ ‚úì"
    log "Matrix —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏–π –∑–∞ –∞–¥—Ä–µ—Å–æ—é: http://${DOMAIN:-localhost}:${DENDRITE_PORT:-8008}"
    log "Element Web –∫–ª—ñ—î–Ω—Ç: http://${DOMAIN:-localhost}"
    log "–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å: http://${DOMAIN:-localhost}/admin"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —Å–µ—Ä–≤—ñ—Å—ñ–≤
check_status() {
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
    
    if command -v docker-compose &> /dev/null; then
        docker-compose ps
    else
        error "Docker Compose –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π"
    fi
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
create_admin() {
    log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
    
    read -p "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: " admin_user
    read -s -p "–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: " admin_pass
    echo
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ API
    curl -X POST "http://localhost:${DENDRITE_PORT:-8008}/_matrix/client/r0/register" \
        -H "Content-Type: application/json" \
        -d "{
            \"auth\": {
                \"type\": \"m.login.dummy\"
            },
            \"initial_device_display_name\": \"Admin Device\",
            \"password\": \"$admin_pass\",
            \"username\": \"$admin_user\"
        }"
    
    log "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ ‚úì"
}

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
main_menu() {
    clear
    echo "=========================================="
    echo "    Matrix Dendrite Setup - –Ü–Ω—Å—Ç–∞–ª—è—Ç–æ—Ä"
    echo "=========================================="
    echo ""
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ñ –æ–ø—Ü—ñ—ó:"
    echo ""
    echo "üîß –°–∏—Å—Ç–µ–º–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:"
    echo "1. ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω—ñ –≤–∏–º–æ–≥–∏ (Docker, –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É)"
    echo "2. üê≥ –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Docker (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü—ñ—è)"
    echo "3. üöÄ –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ Docker Compose (–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü—ñ—è —Å–µ—Ä–≤—ñ—Å—ñ–≤)"
    echo "4. üîê –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø—Ä–∞–≤–∞ Docker (–±–µ–∑–ø–µ–∫–∞ –¥–æ—Å—Ç—É–ø—É)"
    echo ""
    echo "‚öôÔ∏è  –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "5. üåê –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (–¥–æ–º–µ–Ω, –ø–∞—Ä–æ–ª—ñ, –º–æ—Å—Ç–∏)"
    echo "6. üìù –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é (—Ñ–∞–π–ª–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å)"
    echo "7. ‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤—ñ—Å–∏ (Matrix, –º–æ—Å—Ç–∏, –ø–∞–Ω–µ–ª—ñ)"
    echo "8. üìä –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å (—Å—Ç–∞–Ω –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤)"
    echo "9. üë§ –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ø–µ—Ä—à–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)"
    echo ""
    echo "0. üö™ –í–∏—Ö—ñ–¥"
    echo ""
    read -p "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é (0-9): " choice
    
    case $choice in
        1)
            check_system_requirements
            ;;
        2)
            install_docker
            ;;
        3)
            install_docker_compose
            ;;
        4)
            fix_docker_permissions
            ;;
        5)
            setup_env_interactive
            ;;
        6)
            create_configs
            ;;
        7)
            start_services
            ;;
        8)
            check_status
            ;;
        9)
            create_admin
            ;;
        0)
            log "–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!"
            exit 0
            ;;
        *)
            error "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 9"
            main_menu
            ;;
    esac
    
    echo ""
    read -p "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é..."
    main_menu
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    log "–ó–∞–ø—É—Å–∫ Matrix Dendrite Setup —ñ–Ω—Å—Ç–∞–ª—è—Ç–æ—Ä–∞..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π —Å–∫—Ä–∏–ø—Ç –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
    if [[ ! -f "README.md" ]]; then
        error "–°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∑–∞–ø—É—â–µ–Ω–∏–π –∑ –∫–æ—Ä–µ–Ω–µ–≤–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–æ–µ–∫—Ç—É"
        exit 1
    fi
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    log "=== –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π ==="
    
    # –ö—Ä–æ–∫ 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥
    log "–ö—Ä–æ–∫ 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥..."
    check_system_requirements
    
    # –ö—Ä–æ–∫ 2: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker
    log "–ö—Ä–æ–∫ 2: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker..."
    install_docker
    
    # –ö—Ä–æ–∫ 3: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose
    log "–ö—Ä–æ–∫ 3: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker Compose..."
    install_docker_compose
    
    # –ö—Ä–æ–∫ 4: –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤ Docker
    log "–ö—Ä–æ–∫ 4: –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤ Docker..."
    fix_docker_permissions
    
    log "‚úÖ –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
    
    # –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    log "=== –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ==="
    setup_env_interactive
    create_configs
    start_services
    check_status
    create_admin
    
    log "‚úÖ Matrix Dendrite Setup –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!"
    log "–î–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:"
    log "- Matrix —Å–µ—Ä–≤–µ—Ä: http://localhost:8008"
    log "- Element Web: http://localhost"
    log "- –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å: http://localhost:8080"
    log "- Grafana: http://localhost:3000"
}

# –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
main "$@" 