#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ Matrix Dendrite
# –ê–≤—Ç–æ—Ä: Matrix Setup Team

set -e

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
LOG_FILE="/var/log/matrix/update.log"
mkdir -p "$(dirname "$LOG_FILE")"

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

log_info() {
    log "INFO: $1"
    echo -e "${GREEN}INFO: $1${NC}"
}

log_warn() {
    log "WARN: $1"
    echo -e "${YELLOW}WARN: $1${NC}"
}

log_error() {
    log "ERROR: $1"
    echo -e "${RED}ERROR: $1${NC}"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π docker
if ! docker info >/dev/null 2>&1; then
    log_error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —ñ—Å–Ω—É—î docker-compose.yml
if [ ! -f "docker-compose.yml" ]; then
    log_error "docker-compose.yml –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    exit 1
fi

log_info "–ü–æ—á–∞—Ç–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–∫–∞–ø—É –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
log_info "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–∫–∞–ø—É –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º..."
if [ -f "scripts/backup.sh" ]; then
    bash scripts/backup.sh
    log_info "–ë–µ–∫–∞–ø —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
else
    log_warn "–°–∫—Ä–∏–ø—Ç backup.sh –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–∫–∞–ø—É"
fi

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–∞–∑—ñ–≤
log_info "–û–Ω–æ–≤–ª–µ–Ω–Ω—è Docker –æ–±—Ä–∞–∑—ñ–≤..."
if docker-compose pull; then
    log_info "–û–±—Ä–∞–∑–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
else
    log_error "–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–∞–∑—ñ–≤"
    exit 1
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
if docker-compose up -d; then
    log_info "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
else
    log_error "–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
log_info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
sleep 30

HEALTHY_COUNT=0
TOTAL_COUNT=0

for container in $(docker-compose ps -q); do
    TOTAL_COUNT=$((TOTAL_COUNT + 1))
    if [ "$(docker inspect --format='{{.State.Status}}' "$container")" = "running" ]; then
        HEALTHY_COUNT=$((HEALTHY_COUNT + 1))
    fi
done

log_info "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ: $HEALTHY_COUNT/$TOTAL_COUNT –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ –ø—Ä–∞—Ü—é—é—Ç—å"

# –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Matrix API (—è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–æ)
if [ -n "$MATRIX_BOT_URL" ]; then
    log_info "–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Matrix..."
    curl -X POST "$MATRIX_BOT_URL/api/notifications/send" \
        -H "Content-Type: application/json" \
        -d "{\"message\":\"üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: $HEALTHY_COUNT/$TOTAL_COUNT –ø—Ä–∞—Ü—é—é—Ç—å\",\"roomId\":\"$MATRIX_BOT_ROOM_ID\"}" \
        >/dev/null 2>&1 || log_warn "–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è"
fi

log_info "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!" 